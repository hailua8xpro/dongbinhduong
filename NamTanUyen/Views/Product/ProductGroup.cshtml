@model IEnumerable<NamTanUyen.ViewModels.ProductItem>
@{
    var pager = ViewBag.Pager as NamTanUyen.ViewModels.PagerViewModel;
    string url = Request.Url.AbsoluteUri;
    string priceasc = Library.Helper.CommonHelper.GetUrlWithoutParamInput(url, new string[] { "pr", "a" });
    priceasc = Library.Helper.CommonHelper.AddQueryStringToUrl(priceasc, "pr", "asc");
    string pricedesc = Library.Helper.CommonHelper.GetUrlWithoutParamInput(url, new string[] { "pr", "a" });
    pricedesc = Library.Helper.CommonHelper.AddQueryStringToUrl(pricedesc, "pr", "desc");
    string adddesc = Library.Helper.CommonHelper.GetUrlWithoutParamInput(url, new string[] { "pr", "a" });
    adddesc = Library.Helper.CommonHelper.AddQueryStringToUrl(adddesc, "a", "desc");
    var group = ViewBag.Group as NamTanUyen.Models.ProductGroup;
    var filters = ViewBag.Filters as IEnumerable<NamTanUyen.ViewModels.FilterItem>;
}
@section css{

    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/global.css" rel="stylesheet" />
    <link href="~/Content/reponsive.css" rel="stylesheet" />
    <link href="~/Content/menu.dev.css" rel="stylesheet" />
    <link href="~/Content/home.dev.css" rel="stylesheet" />
    <link href="~/Content/product.dev.css" rel="stylesheet" />
    <link href="~/Content/productitem.css" rel="stylesheet" />

}
@section js{

    <script src="~/Scripts/jquery-2.0.0.min.js"></script>
    <script src="~/Areas/cms/Content/cms_theme/vendor/popper/popper.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/global.js"></script>
    <script src="~/Scripts/product.dev.js"></script>
}
<div class="container-fluid my-3">
    <div class="row wr-po">
        <div class="col-12 d-md-none">
            <a href="javascript:" class="btnfilter">
                Bộ lọc
            </a>
        </div>
        <div class="col-md-2">
            <div class="row no-gutters nav-filter">
                <div class="col-12">
                    @Html.Action("FilterProperty", "Common", new { filters = filters })
                    <div class="d-md-none">
                        <select class="selectfilter mb-3">
                            <option value="">@ViewBag.SortText</option>
                            <option value="@priceasc">Giá tăng dần</option>
                            <option value="@pricedesc">Giá giảm dần</option>
                            <option value="@adddesc">Mới nhất</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-10">
            <div class="product-head clearfix">
                <div class="float-left"><h1>@group.ProductGroupName</h1></div>
                <div class="float-right d-none d-md-block">
                    <div class="dropdown ddfilter d-inline-block ddfilter showonhover">
                        <a class="btn dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @ViewBag.SortText
                        </a>

                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                            <a class="dropdown-item" href="@priceasc">Giá tăng dần</a>
                            <a class="dropdown-item" href="@pricedesc">Giá giảm dần</a>
                            <a class="dropdown-item" href="@adddesc">Mới nhất</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row list-product">
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        string href = "";
                        if (item.ProductCategoryId >0)
                        {
                            href = string.Format("/{0}/{1}/{2}/{3}/{4}", group.ProductObject.ProductObjectUrl, group.ProductCategory.ProductCategoryNameUrl, group.ProductGroupUrl, item.ProductId, item.ProductNameUrl);
                        }
                        else if (item.ProductGroupId <1)
                        {
                            href = string.Format("/{0}/{1}/{2}/{3}", group.ProductObject.ProductObjectUrl, group.ProductCategory.ProductCategoryNameUrl, item.ProductId, item.ProductNameUrl);
                        }
                        else
                        {
                            href = string.Format("/{0}/{1}/{2}", group.ProductObject.ProductObjectUrl, item.ProductId, item.ProductNameUrl);
                        }
                        <div class="col-md-3">
                            <div class="productitem">
                                <a href="@href">
                                    <img src="@item.ImageUrl" alt="@item.ProductName" />
                                </a>
                                @if (!string.IsNullOrEmpty(item.ListPropertyValue))
                                {
                                    var mainprops = item.ListPropertyValue.Split('|');
                                    if (mainprops != null && mainprops.Length > 0)
                                    {
                                        <div class="text-center">
                                            <ul class="list-unstyled list-inline list-main-prop">
                                                @foreach (var item2 in mainprops)
                                                {
                                                    <li class="list-inline-item">
                                                        @item2
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                }
                                <p class="product-name"><a href="@href">@item.ProductName</a></p>
                                @if (item.SalePrice > 0 && item.Price > item.SalePrice && item.IsHasPromotion == true)
                                {
                                    var discountcp = Library.Helper.CommonHelper.CalculateDiscountPercent(item.Price.Value, item.SalePrice.Value);
                                    <p class="product-price"><span>@Library.Helper.CommonHelper.FormatCurrency(item.SalePrice.Value).Replace(",00", string.Empty)</span></p>
                                    <p class="product-price"><del>@Library.Helper.CommonHelper.FormatCurrency(item.Price.Value).Replace(",00", string.Empty)</del> <span class="lbldc">-@discountcp%</span></p>
                                }
                                else
                                {
                                    <p class="product-price">@Library.Helper.CommonHelper.FormatCurrency(item.Price.Value).Replace(",00", string.Empty)</p>
                                }
                                <a href="javascript:" class="addtocart" onclick="addToCart(@item.ProductId,1)">Thêm vào giỏ hàng</a>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="row">
                <div class="col-12">
                    @if (pager != null && pager.TotalPage > 1)
                    {
                        @Html.Partial("~/Views/Shared/_Pager.cshtml", pager)
                    }
                </div>
            </div>
        </div>
    </div>
</div>
